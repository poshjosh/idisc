############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

handlers= java.util.logging.FileHandler
#handlers= java.util.logging.FileHandler,java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
#.level= INFO
.level= ALL

#com.bc.meta.selector.util.PropertiesParser.level = FINE

#com.idisc.level = FINE

# Configuration properties are applied in the sequence they are listed. 
# That means, that you should configure parent Logger's before child Logger's. 
# Otherwise the configuration of the parent Logger will override that of the child Logger. 

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Limit the message that are printed to the file to INFO and above.
java.util.logging.FileHandler.level = INFO
# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.pattern = ${sys:user.home}/tomcat/logs/log%u.txt
#java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.limit = 500000
java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

